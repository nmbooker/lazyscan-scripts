#! /usr/bin/env perl

# TODO: BRIEF_DESCRIPTION

use warnings;
use strict;
use autodie;

my $options = get_options();
my @img = @{$options->{images}};

for my $img (@img) {
    my $tmpfile = "$img.prerotate";
    if (system(qw/convert -rotate/, $options->{deg}, $img, $tmpfile) == 0) {
        system(mv => $tmpfile => $img);
    }
}

sub get_options {
    use File::Basename qw(basename);
    use Getopt::Long;
    use Pod::Usage;

    my $prog = basename($0);  # can be used in error messages

    my $options = {
        help => 0,
        man => 0,
        deg => 180,
    };

    Getopt::Long::Configure(qw{gnu_getopt});
    my $parsed_ok = GetOptions(
        'h|help'    =>  \$options->{help},
        'man'       =>  \$options->{man},
        'deg|d=i'   =>  \$options->{deg},
    );

    pod2usage(-exitval => 2) unless $parsed_ok;

    # Note -output defaults to *STDOUT if -exitval is 0 or 1.
    # See the documentation for Pod::Usage under DESCRIPTION.
    pod2usage(-exitval => 1, -verbose => 1) if $options->{help};
    pod2usage(-exitval => 1, -verbose => 2) if $options->{man};

    # Process remaining arguments from @ARGV here, adding results
    # to $options.
    my @images = @ARGV;
    pod2usage(-exitval => 2) unless @images;
    $options->{images} = [@images];

    return $options;
}

__END__

=head1 NAME

rotate - Rotate an image sort-of-inplace

=head1 SYNOPSIS

rotate [options] image [...]

 Options:
    -h, --help              brief help message
    --man                   full documentation

=head1 OPTIONS

=over 8

=item B<--help> or B<-h>

Print a brief help message and exit.

=item B<--man>

Print the manual page and exit.


=back

=head1 DESCRIPTION

B<rotate> will ...

=cut
